service: tesseract-user-authentication

custom:
  secrets: ${ssm:/aws/reference/secretsmanager/${self:service}-${self:provider.stage}~true}
  dynamodb:
    stages:
      - dev

    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
    
    seed:
      dev:
        sources:
          - table: tesseract-user-authentication-dev-oauth2-client
            sources: [./seeds/fake-oauth2-clients.json]
          - table: tesseract-user-authentication-dev-oauth2-scope
            sources: [./seeds/fake-oauth2-scopes.json]

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  memorySize: 512 # default is 1024
  timeout: 30 # max for API Gateway
  apiKeys:
    - user-service-key-${self:service}-${self:provider.stage}
  iamRoleStatements:
    - ${file(./serverlessConfig.js):config.passwordTableIamRoleStatements} 
    - ${file(./serverlessConfig.js):config.cacheTableIamRoleStatements}
    - ${file(./serverlessConfig.js):config.userTableIamRoleStatements}
    - ${file(./serverlessConfig.js):config.sesIamRoleStatements}
    - ${file(./serverlessConfig.js):config.smsIamRoleStatements}
  environment:
    PASSWORD_TABLE: ${file(./serverlessConfig.js):config.passwordTable}
    CACHE_TABLE: ${file(./serverlessConfig.js):config.cacheTable}
    USER_TABLE: ${file(./serverlessConfig.js):config.userTable}
    REGION: ${self:provider.region}
    DEBUG: true
    STAGE: ${self:provider.stage}
    # HASURA_ADMIN_SECRET: ${self:custom.secrets.hasuraAdminSecret}
    # HASURA_URL: ${self:custom.secrets.hasuraUrl}
    JWT_SECRET: ${self:custom.secrets.jwtSecret}
    # TABLE for OAuth2
    CLIENT_TABLE: ${file(./serverlessConfig.js):config.oAuthTables.clientTable}
    TOKEN_TABLE: ${file(./serverlessConfig.js):config.oAuthTables.tokenTable}
    AUTH_CODE_TABLE: ${file(./serverlessConfig.js):config.oAuthTables.authCodeTable}
    SCOPE_TABLE: ${file(./serverlessConfig.js):config.oAuthTables.scopeTable}


plugins:
  # temp fix to hot reload issue (see https://github.com/dherault/serverless-offline/issues/864)
  # is --useChildProcesses flag (see package.json) 
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline

functions:
  authHandler:
    handler: src/index.authHandler
    events:
      - http:
          path: /auth/
          method: ANY
          cors: true
      - http:
          path: "/auth/{proxy+}"
          method: ANY
          cors: true
  eventHandler:
    handler: src/index.eventHandler
    events:
      - http:
          path: /event/
          method: ANY
          private: true
      - http:
          path: "/event/{proxy+}"
          method: ANY
          private: true
  oauthHandler:
    handler: src/index.oauthHandler
    events:
      - http:
          path: /oauth/
          method: ANY
          cors: true
      - http:
          path: "/oauth/{proxy+}"
          method: ANY
          cors: true

package:
  include:
  - src/views/*
  - docs/schema.yaml

resources:
  Resources:
    PasswordTable: ${file(./serverlessConfig.js):config.passwordTableResource}
    CacheTable: ${file(./serverlessConfig.js):config.cacheTableResource}
    ClientTable: ${file(./serverlessConfig.js):config.clientTableResource}
    TokenTable: ${file(./serverlessConfig.js):config.tokenTableResource}
    AuthCodeTable: ${file(./serverlessConfig.js):config.authCodeTableResource}
    ScopeTable: ${file(./serverlessConfig.js):config.scopeTableResource}
    
